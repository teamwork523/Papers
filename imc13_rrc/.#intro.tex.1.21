\section{Introduction}
%\renewcommand{\labelitemii}{$\star$}

Cellular network technologies, such as 3G \textit{Universal Mobile Telecommunications System} (UMTS) and 4G \textit{Long Term Evolution} (LTE), transition between various Radio Resource Control (RRC) states based on the network traffic patterns of individual mobile clients.  These states have different performance and energy consumption tradeoffs, as well as different state transition delays.  Using high-power RRC states only when necessary allows users to experience good network performance on resource-constrained mobile devices. Although the RRC states are defined by an external specification~\cite{spec-3G-RRC, spec-LTE-RRC}, many aspects of the RRC state machine, and in particular timers to transition between states, are implementation or configuration-specific.  The real-world deployment of RRC state machines and the impact on performance are not well-understood and differs by device model, carrier, and location.

In this paper, we examine how RRC states are implemented, their real-world state-transition behavior and impact on performance. We uncover several previously unknown phenomena that affect user performance.  We perform a study of RRC state implementations and performance on 16 carriers from 9 countries and use \textit{Radio Link Control} (RLC) layer analysis to understand the root causes of the phenomena discovered.  

A better understanding of RRC state behavior would be beneficial for many parties.  Cellular carriers would, evidently, be interested in determining how devices on their network perform and how performance can be improved.  Device manufacturers would be interested in understanding any device-dependent effects, as device implementation details and features such as Fast Dormancy~\cite{fast_dormancy} can mean different devices perform differently. Developers of major applications might be interested in understanding how network behavior can impact application performance, as work has been done to show that application behavior can decrease RRC-related performance issues~\cite{aro}.  Finally, researchers studying protocol optimization would find these tools and this knowledge useful.  We hope to release our tools as open-source software.

We present three main types of contributions. First, we present several methodological contributions which allow us to perform measurements that lead to a deeper understanding of RRC behavior. Second, we present our findings on previously unknown performance problems and phenomena. Third, we suggest some potential performance optimizations. 

\begin{enumerate}[noitemsep,topsep=0pt,parsep=0pt,partopsep=0pt]
%[noitemsep,topsep=0pt,parsep=0pt,partopsep=0pt]
\item \textbf{Methodological contributions.} We design a generic RRC state model generation method that is robust to poor network conditions and interfering background traffic in order to allow non-expert users on arbitrary mobile devices to measure their device's RRC state machine using only an Android application.  We focus primarily on inferring the demotion timers of RRC states as well as the performance associated with each state. We also develop a novel cross-layer mapping mechanism to correlate transport layer packets with data layer link \textit{protocol data unit} (PDU, the smallest data transmission unit in RLC) so that the root causes of TCP and UDP performance and packet loss issues can accurately be identified at the RLC layer. This allows 99.8\% of the transport layer packets to be accurately mapped to the corresponding RLC layer PDUs.

\item \textbf{New Findings on the Impact of RRC State on Performance.} We present several new findings that both show that there are significant undetected performance problems in networks today, and more broadly shows that our methods are useful in understanding RRC states in the real world.  For example, we show that there are widespread performance problems associated with certain demotion-promotion patterns on specific mobile handset models. We also show that, globally, most RRC state machines are similarly implemented, which may have implications for any RRC state based application optimization approach. At the RLC layer, we observe frequent RLC-layer retransmission delays around the FACH state and around promotions to FACH state, which contributes to the transport layer latency.

\item \textbf{Proposed Solution to Performance Problems Found.} We propose an improvement to how RLC currently behaves based on our findings. To reduce potentially unnecessary retransmissions that occur during poorly-performing FACH states and FACH-state transitions,
% observed, the application could batch the data transmission to reduce the possible number of transmissions in these states.  To address this RLC retransmission delay issue, 
we propose an RLC \emph{Fast Re-Tx} mechanism that actively responds to the RLC PDU loss signals. By simulating this fast retransmission mechanism using real \textit{Qualcomm eXtensible Diagnostic Monitor} (QxDM) traces with visibility of RLC traffic behavior, we find that our proposed mechanism could reduce RLC latency by up to 35.69\% when these poorly-performing FACH states occur. The possible latency overhead occurs when we fail to speculate the RLC retransmission, but the overall latency could still be reduced by 2.66\%.
\end{enumerate}


%%	\begin{itemize}
%		\item
%			\textbf{Methodology:} Based on state of art RRC state inference method, we designed a generic RRC state model generation mechanism to effectively reduce the effect of unstable wireless channel, and produce finer RRC state machine using classic statistical method. In additional, we develop the first cross layer mapping mechanism in the empirical study to correlate the transport layer packets with the data layer link PDUs, so that we could accurately identify the TCP/UDP performance issue inside the RLC layer. We could map 99.8\% of the transport layer packets to the corresponding RLC layer PDUs.
%		\item
%			\textbf{Observation:} We observe the abnormal large FACH state latency issue through our RRC inference measurement. After a world wide scale deployment of RRC state model generation measurement, we are able to discover the device dependent and network specific abnormal FACH state behaviors. We also observe the frequent RLC layer retransmission and retransmission delay over initial FACH state and FACH promotion transition, which contributes a lot to the transport layer latency.
%		\item	
%			\textbf{Implications:} Due the abnormal initial FACH state and FACH latency behavior, the application could batch the data transmission to reduce the possible number of transmission over FACH. To address the RLC retransmission delay issue, we propose a RLC \emph{Fast Re-Tx} mechanism to active response to the RLC PDU loss signals. By simulate the fast retransmission mechanism in the real trace QxDM, we apply cost-benefit analysis and found that \emph{Fast Re-Tx} could reduce RLC latency up to 35.69\% over FACH states.
%	\end{itemize}
