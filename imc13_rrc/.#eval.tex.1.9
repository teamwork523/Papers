\section{RLC Fast Retransmission}\label{sec:eval}

As we have shown in \S\ref{sec:qxdm.analysis}, negative interactions between RLC-level retransmissions and TCP-level retransmissions results in increased latency. In this section, we suggest a mechanism for reducing this latency by implementing RLC fast retransmission to allow the RLC layer to respond faster to packet losses.
%\subsection{RLC Fast Retransmission}

%\subsection{RTT Estimation}
To do so, we first explain how we measure RTTs in the RLC layer.  As STATUS PDUs (ACK or NACK) are not generated by every received RL PDU, and are only triggered if a polling request is received or one or more PDUs are missing in the reciever buffer~\cite{spec-3G-RLC}, it is difficult to estimate RTTs directly.  As QxDM traces only include client-side information we have no data on when the server receives each PDU.  We estimate RTTs of RLC PDUs based on the timestamp difference between the most recent sender polling request and the most recent recieved ACK.  The RLC configuration limits the maximum polling request frequency to 500ms.  A previous mobile RTT estimation study shows that the autocorrelation coefficient between two RTT measurements within 500 ms is more than 0.6~\cite{proteus}, so this estimate is reasonable.

%We first define the RTT in RLC layer. In the RLC protocol, the STATUS PDUs (ACK or NACK) don't generate by every received RLC PDU, but triggered either by receiving a polling request from the sender or by detecting one or more missed PDUs from its receiver buffer~\cite{spec-3G-RLC}. Since the QxDM traces are collected at the client side, we don't have the information of when the server side receive the PDU. Thus, I estimate the RTT of a RLC PDU based on the timestamp difference between the most recent sender's polling request and received ACK. Based on RLC configuration, the maximum polling request frequency is 500 ms. One of the previous mobile RTT estimation study shows the autocorrelation coefficient of two RTT measurements within 500 ms is more than 0.6~\cite{proteus}. Therefore, my estimation is still reasonable to be considered as the real RLC RTT value.

% Four case
\begin{figure*}[t!]
	\centering
	\subfigure[Win]{
		\includegraphics[width=0.35\textwidth]{figs/Win.png}
		\label{fig:win}
	}
	~~~
	\subfigure[Draw Plus]{
		\includegraphics[width=0.35\textwidth]{figs/Draw_plus.png}
		\label{fig:draw.plus}
	}
	\\
	\subfigure[Draw Minus]{
		\includegraphics[width=0.35\textwidth]{figs/Draw.png}
		\label{fig:draw.minus}
	}
	~~~
	\subfigure[Loss]{
		\includegraphics[width=0.35\textwidth]{figs/Loss.png}
		\label{fig:loss}
	}
	\ncaption{\textit{Win}: RLC Fast Re-Tx avoid a TCP RTO. \textit{Draw Plus}: the predication accuracy is more than 50\%. \textit{Draw Minus}: the predication accuracy is less than 50\%. \textit{Loss}: all predication fail.}
	\label{fig:cost.benefit.detail}
\end{figure*}

\subsection{Cost-Benefit Analysis}

% \comment{I'm not quite sure what is meant.  If they would have been retransmitted in the future anyway?}
% \comment{Is this part necessary given that we apparently consider four other cases instead?}
% To evaluate this new promosed mechanism, we perform a cost-benefit analysis over our existing QxDM trace.  For the PDUs resent through fast retransmission, we determine if they are transmitted in the future  then we subtract the RTT value that would occur with fast retransmit with the RTT value from the trace.  If the difference is less than zero, we count it as a benefit; otherwise it is a cost. 

To evaluate the proposed \textit{Fast Re-Tx} mechanism, we perform a cost-benefit analysis over \emph{QxDM\_{}UDP\_{}Trace} and \emph{QxDM\_{}TCP\_{}Trace}. As the sender received the 3 duplicate ACK signal, it predict that all the previous unacknowledged PDUs have not been received by the receiver, and transmit all of them right away. However, there is a chance that the PDUs get delayed by radio channel contention. We could validate the actual causes from the real QxDM traces based on whether the sender receives an ACK or a NACK after the \textit{Fast Re-Tx}. An future ACK implies all the PDUs are delayed over the channel, while the NACK could indicate the PDUs loss~\cite{spec-3G-RLC}.

To explicitly analyze the cost/benefit behavior, we categorize all the duplicate ACK scenarios into 4 cases, which we call Win, Draw\_{}Plus, Draw\_{}Minus and Loss.  Draw\_{}Plus occurs when the sender receives a NACK and more than 50\% of the PDUs that would be sent in fast-retransmit were retransmitted in the real trace. This can be seen in Figure~\ref{fig:draw.plus} --- the decrease in RTT is beneficial.  ``Win" is similar, but occurs where the TCP RTO would have been avoided entirely leading to further latency reductions as in Figure~\ref{fig:win}.  ``Draw\_{}Minus" occurs when less than 50\% of the PDUs retransmitted through our proposed mechanism were retransmitted in the actual trace. This case is shown in Figure~\ref{fig:draw.minus}. If all PDUs were successfully delivered to the receiver, we refer to this case as ``Loss" as in Figure\ref{fig:loss} redundant data was transmitted and there were no latency gains.


%In order to know whether the new proposed RLC mechanism works, I apply a cost-benefit analysis over the existing \emph{QxDM\_{}Trace}. The definition of benefit and cost is straight forward. Basically, if the fast retransmitted PDUs will be transmitted in the future, then we compare the RTT if it transmitted right after the duplicate ACKs with the real RTT value in the trace. If the difference is less than 0, we call that is a benefit. In the same way, if it is greater than 0, we call it a cost. However, we want to know if the PDU is really lost over the channel, or it just gets delayed due to channel contention. That depends on whether the sender receives a ACK or NACK (a list of unreceived PDU sequence numbers). We categorize the situations into four cases -- Win, Draw\_{}Plus, Draw\_{}Minus, and Loss. If the sender will receive a NACK, and more than 50\% of the fast retransmitted PDUs will retransmit in the real trace, then we call the case "Draw\_{}Plus" as in Figure~\ref{fig:draw.plus}. Since it would brings us benefit if the fast retransmit RTT is less than the RTT in the real trace. The "Win" case is defined that if we could avoid a TCP RTO based on the "Draw\_{}Plus" in Figure~\ref{fig:win}. In that case, RLC layer benefit is the same as "Draw\_{}Plus", but I want to highlight that it could bring further latency benefit over the transport layer. "Draw\_{}Minus" occurs when less than 50\% of the fast retransmitted PDUs get really retransmitted in the real trace as in Figure~\ref{fig:draw.minus}. If the sender gets a ACK with a larger sequence number, then all the PDUs were successfully delivered to the receiver. In that case, we called the case "Loss", since all the retransmitted packets are redundant as in Figure~\ref{fig:loss}. To summarize all four cases:
%
%\begin{itemize}
%\item \textbf{Win:} A special case of Draw\_{}Plus with extra benefit of avoid TCP RTO.
%\item \textbf{Draw\_{}Plus:} More than half of the fast retransmitted packets really retransmitted in the real trace.
%\item \textbf{Draw\_{}Minus:} Less than half of the fast retransmitted packets really retransmitted in the real trace.
%\item \textbf{Loss:} None of the fast retransmitted packets retransmitted in the real trace.
%\end{itemize}

As we can see from Table~\ref{tab:rlc.fast.sim}, around 75.01\% of the time there would be a clear benefit from RLC \emph{Fast Re-Tx}. The rest 24.99\% of cases could introduce more cellular network traffic to reduce the RLC layer throughput. However, the throughput impact is less significant compared with delay during the FACH state, since the throughput is much lower than the bandwidth over the FACH state~\cite{3g_rrc}. Using the \emph{QxDM\_{}UDP\_{}Trace} and \emph{QxDM\_{}TCP\_{}Trace} and the previous RLC RTT estimation mechanism, we estimate that the overall RLC delay would be reduced by \textit{2.66\%} over all RRC states and by up to \textit{35.69\%} during FACH\_{}INIT and FACH\_{}PROMOTE. Although further testing would be required to ensure that devices benefit from this mechanism in a real implementation, these results suggest that this approach is a promising potential solution to the problem of negative interactions between TCP and RLC retransmission mechanisms, especially in the poorly-performing FACH transition periods.


%of the time we will have benefit on RLC latency reduction if we count the "Win" and "Draw\_{}Plus". The overall RLC delay could be reduced by \textit{2.66\%} over all the RRC state based on trace simulation analysis. If we break down the cost-benefit over different RRC states, the RLC RTT latency could reduce by up to \textit{35.69\%} over initial FACH state or FACH promotion transitions. Therefore, we could have a large latency benefit over the initial period of data transmission.  Although further testing would be required to ensure that devices benefit from this mechanism in a real implementation, these results suggest that this approach is a promising potential solution to this problem.
%As we can see from Table~\ref{tab:rlc.fast.sim}, around 75\% of the time we will have benefit on RLC latency reduction if we count the "Win" and "Draw\_{}Plus". The overall RLC delay could be reduced by \textit{2.66\%} over all the RRC state based on trace simulation analysis. If we break down the cost-benefit over different RRC states, the RLC RTT latency could reduce by up to \textit{35.69\%} over initial FACH state or FACH promotion transitions. Therefore, we could have a large latency benefit over the initial period of data transmission.  

% Cost-Benefit Table
\begin{table}
\begin{tabularx}{0.50\textwidth}{ | c | X | c | c |}
	\hline
	\textbf{Case Name} & \textbf{Total Case Ratio (\%)} & \multicolumn{2}{|c|}{\textbf{Average RLC RTT}} \\ \cline{3-4}
	& & \textbf{Delta (ms)} & \textbf{Delta Ratio (\%)} \\ 
	\hline\hline
  	Win & 10.32$\pm$1.89 & -0.08 & 0.21 \\
  	\hline
  	Draw\_{Plus}* & 64.69$\pm$8.32 & -1.178 & 3.07 \\
  	\hline
  	Draw\_{Minus} & 20.63$\pm$3.45 & +0.365 & 0.95 \\
  	\hline
  	Loss & 4.36$\pm$0.06 & +0.057 & 0.15 \\
  	\hline
\end{tabularx}
* The Draw\_{Plus} case excludes the percentage of Win
\caption{The RLC Fast Re-Tx Cost-Benefit Table}
\label{tab:rlc.fast.sim}
\end{table}
